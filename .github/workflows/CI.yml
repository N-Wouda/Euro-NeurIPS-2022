name: CI

on:
  push:
    branches: [ main]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        os: [ 'ubuntu-latest' ]
        python-version: [ '3.8', '3.10' ]
        compiler: [ 'gcc', 'clang' ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - if: matrix.compiler == 'clang'
        name: Set up clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: 10
      - if: matrix.compiler == 'gcc'
        name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 9
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Run black
        run: poetry run black .
      - name: Run flake8
        run: poetry run flake8 .
      - uses: DoozyX/clang-format-lint-action@v0.13
        with:
          source: 'hgs_vrptw/src hgs_vrptw/include'
          extensions: 'h,cpp'
          clangFormatVersion: 11
      - name: Make all
        run: |
          cmake -Brelease -Shgs_vrptw
          make --directory=release
      - name: Test static solver
        run: poetry run python benchmark.py --max_iterations 1 --num_procs 2
